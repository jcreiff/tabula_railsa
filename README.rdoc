Rather than an if statement in the home view, I would make a separate view (for
example, home/results, as a post), then point the form_tag to home_results_path.
This way, the "if[params]" logic can be lifted out of the form.html.erb file and
be placed in a results.html.erb file.

_________________________________


The best approach for storing environment variables like API keys is to keep them
in .profile as a key/value pair.  This way when you write code that accesses an API
and requires you to provide a password as a parameter, you can write ENV["PASSWORD"]
instead of your actual key.  When you push to GitHub, your API won't be visible and
therefore less easily compromised.

Rails runs migrations for your test database automatically when you rake, so fixtures
appear in test environment (whether you like it or not).


__________________________________

Partials v. Helpers:

I understand that partials are useful so that pieces of code that are likely to be
used in more than one view (or that are only used once, but clutter the view because
they are bulky) can be stored in a separate place and called by "render 'partial_name'".

In this case, the form for @survey seems like a good candidate to be put in a partial.

I'm unclear as to exactly what helpers do, but I have a hunch that they would be
useful to simplify the show page (?)
